
package ru.sample.qiwi.soap.cre2;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * ���-������, ��������������� �������, ��������� � ������ ��������
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SingleFormatService", targetNamespace = "http://creditregistry.ru/2010/webservice/SingleFormatService", wsdlLocation = "file:/C:/Users/\u0414\u043c\u0438\u0442\u0440\u0438\u0439%20\u0410\u0441\u0442\u0430\u0445\u043e\u0432/AppData/Local/Temp/tempdir2404415842400142301.tmp/SingleFormatService_1.wsdl")
public class SingleFormatService_Service
    extends Service
{

    private final static URL SINGLEFORMATSERVICE_WSDL_LOCATION;
    private final static WebServiceException SINGLEFORMATSERVICE_EXCEPTION;
    private final static QName SINGLEFORMATSERVICE_QNAME = new QName("http://creditregistry.ru/2010/webservice/SingleFormatService", "SingleFormatService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/\u0414\u043c\u0438\u0442\u0440\u0438\u0439%20\u0410\u0441\u0442\u0430\u0445\u043e\u0432/AppData/Local/Temp/tempdir2404415842400142301.tmp/SingleFormatService_1.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SINGLEFORMATSERVICE_WSDL_LOCATION = url;
        SINGLEFORMATSERVICE_EXCEPTION = e;
    }

    public SingleFormatService_Service() {
        super(__getWsdlLocation(), SINGLEFORMATSERVICE_QNAME);
    }

    public SingleFormatService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SINGLEFORMATSERVICE_QNAME, features);
    }

    public SingleFormatService_Service(URL wsdlLocation) {
        super(wsdlLocation, SINGLEFORMATSERVICE_QNAME);
    }

    public SingleFormatService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SINGLEFORMATSERVICE_QNAME, features);
    }

    public SingleFormatService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SingleFormatService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * ����� ����� ��� �������
     * 
     * @return
     *     returns SingleFormatService
     */
    @WebEndpoint(name = "SingleFormatServiceHttpPort")
    public SingleFormatService getSingleFormatServiceHttpPort() {
        return super.getPort(new QName("http://creditregistry.ru/2010/webservice/SingleFormatService", "SingleFormatServiceHttpPort"), SingleFormatService.class);
    }

    /**
     * ����� ����� ��� �������
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SingleFormatService
     */
    @WebEndpoint(name = "SingleFormatServiceHttpPort")
    public SingleFormatService getSingleFormatServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://creditregistry.ru/2010/webservice/SingleFormatService", "SingleFormatServiceHttpPort"), SingleFormatService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SINGLEFORMATSERVICE_EXCEPTION!= null) {
            throw SINGLEFORMATSERVICE_EXCEPTION;
        }
        return SINGLEFORMATSERVICE_WSDL_LOCATION;
    }

}
